{"version":3,"sources":["exp/1/WayPoint.js","exp/1/Ascensor.js","exp/1/Altura.js","exp/1/FullSvg.js","exp/1/Fondos.js","exp/1/data.js","exp/Exp1.js"],"names":["onEnter","data","windowHeight","style","position","width","height","maxWidth","margin","display","justifyContent","alignItems","onPositionChange","index","topOffset","zIndex","top","right","src","alt","left","className","background","padding","border","textAlign","texto","isSafari","undefined","window","safari","Ascensor","Altura","bounds","visible","length","opacity","useSpring","config","mass","tension","friction","div","color","fontSize","fontWeight","fontFeatureSettings","fontVariantNumeric","letterSpacing","Math","floor","normalizeBetweenTwoRanges","abs","toLocaleString","FullSvg","useMeasure","scroll","polyfill","ResizeObserver","ref","overflow","useState","setIndex","useWindowHeight","paddingTop","lineHeight","marginTop","Fondos","map","x","key","WayPoint"],"mappings":"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","file":"static/js/5.70fe8db2.chunk.js","sourcesContent":["import React from \"react\";\nimport { Waypoint } from \"react-waypoint\";\n\nexport default function ({ onEnter, data, windowHeight }) {\n  return (\n    <div\n      style={{\n        position: \"relative\",\n        width: \"100%\",\n        height: `${windowHeight}px`,\n        maxWidth: \"900px\",\n        margin: \"0 auto\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        // border: \"1px solid pink\",\n        // background: `url(./img/2/bg/${data.index}.png)`,\n        // backgroundSize: \"cover\",\n        // backgroundRepeat: \"no-repeat\",\n        // backgroundPosition: \"center\",\n      }}\n    >\n      <Waypoint\n        onPositionChange={() => data && data.index && data.index}\n        onEnter={() => onEnter(data.index)}\n        topOffset=\"50%\"\n      />\n      <div\n        style={{\n          position: \"relative\",\n          width: \"100%\",\n          height: `${windowHeight}px`,\n          maxWidth: \"600px\",\n          margin: \"0 auto\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          zIndex: \"2\",\n        }}\n      >\n        <div\n          style={{\n            position: \"absolute\",\n            top: 0,\n            right: 0,\n            width: \"100%\",\n            height: `${windowHeight}px`,\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            zIndex: \"2\",\n          }}\n        >\n          <img\n            src={`./img/1/fg/${data.index}.png`}\n            alt=\"\"\n            style={{ width: \"100%\", top: \"0\", left: \"0\" }}\n          />\n        </div>\n        <div\n          style={{\n            position: \"absolute\",\n            top: 0,\n            right: 0,\n            width: \"100%\",\n            height: `${windowHeight}px`,\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            zIndex: \"2\",\n          }}\n        >\n          <p\n            className=\"floating\"\n            style={{\n              zIndex: 3,\n              margin: \"270px 60px 0 60px\",\n              background: \"RGBA(255, 255, 255, 0.90)\",\n              padding: \"1em\",\n              border: \"1px solid var(--foreground-color)\",\n              textAlign: \"center\",\n              maxWidth: \"250px\"\n            }}\n          >\n            {data.texto}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nconst isSafari = window.safari !== undefined;\n\nfunction Ascensor({ data, index, windowHeight }) {\n  return (\n    <div\n      style={{\n        height: `${windowHeight}px`,\n        width: \"100%\",\n        maxWidth: \"600px\",\n        margin: \"0 auto\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        position: isSafari ? \"-webkit-sticky\" : \"sticky\",\n        top: 0,\n        zIndex: 2,\n        // border: \"1px solid gold\",\n      }}\n    >\n      <div className=\"ascensor\" style={{ position: \"relative\" }}>\n        <img\n          src={`./img/1/ascensor/${data[index].index}.png`}\n          alt=\"\"\n          style={{ width: \"100%\" }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Ascensor;\n","import React from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport { normalizeBetweenTwoRanges } from \"../../utils/utils\";\n\nfunction Altura({ bounds, index, data }) {\n  let visible = index > 0 && index < data[data.length - 1].index;\n\n  const { opacity } = useSpring({\n    opacity: visible ? 1 : 0,\n    config: { mass: 5, tension: 500, friction: 80 },\n  });\n\n  return (\n    <animated.div\n      className=\"altura\"\n      style={{\n        position: \"fixed\",\n        top: \"90px\",\n        width: \"100%\",\n        zIndex: 4,\n        opacity,\n      }}\n    >\n      <div\n        style={{\n          width: \"200px\",\n          textAlign: \"center\",\n          margin: \"0 auto\",\n          color: \"white\",\n          background: \"var(--foreground-color)\",\n          padding: \"1em\",\n          border: \"1px solid white\",\n          display: \"flex\",\n          fontSize: \"0.9em\",\n        }}\n      >\n        <h6 style={{ opacity: 0.6 }}>Altura: </h6>\n\n        <h6\n          style={{\n            fontWeight: 400,\n            fontFeatureSettings: '\"tnum\"',\n            fontVariantNumeric: \"tabular-nums\",\n            width: \"190px\",\n            letterSpacing: \"0.09em\",\n          }}\n        >\n          {Math.floor(\n            normalizeBetweenTwoRanges(\n              bounds.height - Math.abs(bounds.top),\n              0,\n              bounds.height,\n              0,\n              350000\n            )\n          ).toLocaleString()}{\" \"}\n        </h6>\n\n        <h6 style={{ opacity: 0.6 }}>km.</h6>\n      </div>\n    </animated.div>\n  );\n}\n\nexport default Altura;\n","import React, { useMemo } from \"react\";\nimport { randomInt, random } from \"../../utils/utils\";\n\nconst randomStars = (width, height, n = 100) => {\n  return new Array(n).fill().map((_, i) => {\n    return (\n      <circle\n        className={\"flicker\"}\n        key={`star${i}`}\n        cx={randomInt(0, width)}\n        cy={randomInt(0, height)}\n        r={randomInt(2, 4)}\n        fill={`RGBA(255, 255, 255, ${random(0.2, 1)}`}\n        style={{\n          animationDelay: `${randomInt(0, 1200)}ms`,\n          animationDuration: `${randomInt(1, 6)}s`,\n        }}\n      />\n    );\n  });\n};\n\nfunction FullSvg({ bounds, windowHeight }) {\n  const stars = useMemo(\n    () =>\n      randomStars(bounds.width, windowHeight * 2, Math.floor(bounds.width / 4)),\n    [bounds.width, windowHeight]\n  );\n\n  const margin = 130;\n  const color = \"RGBA(219, 231, 229, 0.80)\";\n\n  return (\n    <div className=\"svg\" style={{ width: \"100%\", height: \"100%\", zIndex: 0 }}>\n      <svg\n        style={{ margin: \"0 auto\", overflow: \"visible\" }}\n        viewBox={`0 0 ${bounds.width} ${bounds.height}`}\n      >\n        <line\n          x1={bounds.width / 2 + margin}\n          y1={windowHeight - windowHeight / 6.9}\n          x2={bounds.width / 2 + margin}\n          y2={bounds.height - 300}\n          style={{ stroke: color, strokeWidth: 12 }}\n        />\n\n        <line\n          x1={bounds.width / 2 - margin}\n          y1={windowHeight - windowHeight / 6.9}\n          x2={bounds.width / 2 - margin}\n          y2={bounds.height - 300}\n          style={{ stroke: color, strokeWidth: 12 }}\n        />\n\n        {stars}\n      </svg>\n    </div>\n  );\n}\n\nexport default FullSvg;\n","import React from \"react\";\nimport useMeasure from \"react-use-measure\";\nimport { ResizeObserver } from \"@juggle/resize-observer\";\n\nimport Altura from \"./Altura\";\nimport FullSvg from \"./FullSvg\";\n\nexport default ({ index, data, windowHeight }) => {\n  const [ref, bounds] = useMeasure({ scroll: true, polyfill: ResizeObserver });\n\n  return (\n    <>\n      <div\n        ref={ref}\n        style={{\n          position: \"absolute\",\n          width: \"100%\",\n          height: \"100%\",\n          overflow: \"hidden\",\n        }}\n      >\n        <div className=\"star comet\"></div>\n\n        {/* <img\n          className=\"rotate\"\n          style={{\n            position: \"absolute\",\n            top: `${windowHeight * 2 - 60}px`,\n            left: `${bounds.width / 2 - 90}px`,\n            zIndex: 0,\n            transform: `translate(0, ${bounds.top / 2}px) scaleX(-1)`,\n            transformOrigin: \"50% 50%\",\n          }}\n          src=\"./img/2/fondos/satellite3.svg\"\n          width=\"120px\"\n          alt=\"\"\n        /> */}\n\n\n        {/* SATELLITE */}\n        {/* <img\n          className=\"floatingSat\"\n          style={{\n            position: \"absolute\",\n            top: 0,\n            left: `${bounds.width / 2 + 120}px`,\n            bottom: 0,\n            transform: `translate(0, ${bounds.top / 5}px)`,\n            zIndex: 3,\n          }}\n          src=\"./img/1/fondos/satellite4.svg\"\n          width=\"120px\"\n          alt=\"\"\n        /> */}\n\n        <Altura index={index} bounds={bounds} data={data} />\n\n        {/* FULLSVG */}\n        {/* <FullSvg bounds={bounds} windowHeight={windowHeight} /> */}\n      </div>\n    </>\n  );\n};\n","export default [\n  { index: 0, texto: \"En mi ascensor sube toda clase de gente\" },\n  { index: 1, texto: \"Los que van de vacaciones\" },\n  { index: 2, texto: \"Los que van a celebrar una despedida de soltero\" },\n  { index: 3, texto: \"Los que viajan por trabajo\" },\n  { index: 4, texto: \"y sobre todo los nostálgicos\" },\n]","import React, { Fragment, useState } from \"react\";\nimport { useWindowHeight } from \"@react-hook/window-size/throttled\";\n\nimport WayPoint from \"./1/WayPoint\";\nimport Ascensor from \"./1/Ascensor\";\nimport Fondos from \"./1/Fondos\";\nimport data from \"./1/data\";\nimport \"./1/style.css\";\n\nexport default function () {\n  const [index, setIndex] = useState(0);\n\n  const height = useWindowHeight();\n\n  const onEnter = (index) => {\n    setIndex(index);\n  };\n\n  return (\n    <div>\n      <div className=\"comic\">\n        <div\n          className=\"comic\"\n          style={{\n            background:\n              \"linear-gradient(to bottom, #03061A 0%, RGBA(64, 81, 167, 1.00) 68%, #84c9d6 87%,#f4d0a6 100%)\",\n          }}\n        >\n          <div\n            style={{\n              maxWidth: \"900px\",\n              margin: \"0 auto\",\n              paddingTop: \"80px\",\n              color: \"white\",\n              position: \"relative\",\n            }}\n          >\n            <div\n              style={{\n                color: \"white\",\n                maxWidth: \"450px\",\n                margin: \"0 auto\",\n                padding: \"0 1em 0 1em\",\n              }}\n            >\n              <h1\n                className=\"h2\"\n                style={{ textAlign: \"center\", lineHeight: \"1.2em\" }}\n              >\n                El ascensorista espacial\n              </h1>\n              <p>\n                Los viajes espaciales llegaron a Cádiz el 16 de julio de 2049.\n              </p>\n              <p style={{ marginTop: \"-0.5em\" }}>\n                Ese día me convertí en el primer ascensorista espacial de la\n                ciudad.\n              </p>\n            </div>\n            {/*\n            <img\n              src=\"./img/1/luna.png\"\n              alt=\"Luna\"\n              style={{ width: \"100%\", margin: \"1em 0 0 0\" }}\n            /> */}\n          </div>\n\n          {/* <div\n            style={{\n              color: \"white\",\n              maxWidth: \"450px\",\n              margin: \"0 auto\",\n              padding: \"2em 1em 2em 1em\",\n            }}\n          >\n            <p>Durante estos años he visto de todo...</p>\n          </div> */}\n\n          <Ascensor data={data} index={index} windowHeight={height} />\n\n          <div className=\"parallax\" style={{ position: \"relative\" }}>\n            <Fondos index={index} data={data} windowHeight={height} />\n            <div className=\"bg\" style={{ marginTop: `-${height}px` }}>\n              {data.map((x) => {\n                return (\n                  <Fragment key={`n${x.index}`}>\n                    <WayPoint\n                      onEnter={onEnter}\n                      data={x}\n                      windowHeight={height}\n                    />\n                  </Fragment>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n\n        <div\n          className=\"final\"\n          style={{\n            color: \"white\",\n            position: \"relative\",\n            background: \"RGBA(243, 208, 166, 1.00)\",\n          }}\n        >\n          <div\n            className=\"texto\"\n            style={{\n              maxWidth: \"900px\",\n              margin: \"0 auto\",\n              padding: \"2em 0 8em 0\",\n              textAlign: \"center\",\n              color: \"var(--foreground-color)\",\n            }}\n          >\n            <h3>Estación Caleta</h3>\n            <p>Final del trayecto</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}